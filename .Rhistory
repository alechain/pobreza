ephh<- unnest(ephh, cols = "microdata")
eph2017_2019<-left_join(ephi,ephh)
View(eph2017_2019)
View(ephh)
ephi<- get_microdata(year=2020, trimester = 1, type = "individual")
ephi<- get_microdata(year=2020, trimester = 1, type = "individual")
ephh <- get_microdata(year=2020, trimester = 1, type = "hogar")
eph1t<- left_join(ephi,ephh)
View(eph1t)
ephi<- get_microdata(year=2017:2019, trimester = 1:4, type = "individual")
ephi<- ephi %>% select(microdata)
ephi<- unnest(ephi,cols = "microdata")
View(ephi)
ephh <- get_microdata(year=2017:2019, trimester = 1:4, type = "hogar")
ephh<- ephh %>% select(microdata)
ephh<- unnest(ephh, cols = "microdata")
eph2017_2019<-left_join(ephi,ephh)
View(eph2017_2019)
ephi<- ephi %>% select(microdata)
ephh <- get_microdata(year=2020, trimester = 1:2, type = "hogar")
ephh<- ephh %>% select("microdata")
ephh<- unnest(ephh,cols = "microdata")
ephi<- get_microdata(year=2020, trimester = 1:2, type = "individual")
ephi<- ephi %>% select(microdata)
ephi<- unnest(ephi,cols = "microdata")
ephh <- get_microdata(year=2020, trimester = 1:2, type = "hogar")
ephh<- ephh %>% select("microdata")
ephh<- unnest(ephh,cols = "microdata")
eph2020<- left_join(ephi,ephh)
ephtotal<- bind_rows(eph2017_2019,eph2020)
View(ephtotal)
ephtotal<- left_join(ephtotal,aglomerados)
aglomerados
aglomerados<- aglomerados %>% rename("AGLOMERADO"=codigo)
ephtotal<- left_join(ephtotal,aglomerados)
ephtotal<- left_join(ephtotal,eph::adulto_equivalente)
View(canastas)
canastas<- read.csv("canasta.csv", sep=";", dec=".", header = TRUE)
ephtotal<- left_join(ephtotal,canastas)
ephtotal<- ephtotal %>% group_by(ANO4, TRIMESTRE, CODUSU,NRO_HOGAR) %>% mutate(EAF=sum(adequi)) %>% ungroup()
ephtotal %>% select(EAF)
ephtotal<- ephtotal %>% mutate(CBAEQ=CBA*EAF,
CBTEQ=CBT*EAF)
ephtotal<- ephtotal %>% mutate(condicion=case_when(ITF<CBAEQ ~ "Indigente",
ITF>=CBAEQ & ITF<CBTEQ ~ "Pobre",
ITF>=CBTEQ ~ "No Pobre"))
class(ephtotal$TRIMESTRE)
ephtotal <- ephtotal %>% mutate(SEMESTRE=case_when(TRIMESTRE %in% c(1,2)~1,
TRIMESTRE %in% c(3,4)~2))
setwd("~/GitHub/pobreza")
library(eph)
library(tidyverse)
library(formattable)
library(Hmisc)
library(readxl)
library(foreign)
library(glue)
library(splitstackshape)
library(purrr)
aglomerados<-eph::diccionario_aglomerados
aglomerados<- aglomerados %>% rename("AGLOMERADO"=codigo)
canastas<- read.csv("canasta.csv", sep=";", dec=".", header = TRUE)
canastagba<- canastas %>% filter(reg=="GBA", TRIMESTRE%in%c(1,2) & ANO4==2020) %>% select(-c(REGION,reg))
ephi<- get_microdata(year=2017:2019, trimester = 1:4, type = "individual")
ephi<- ephi %>% select(microdata)
ephi<- unnest(ephi,cols = "microdata")
ephh <- get_microdata(year=2017:2019, trimester = 1:4, type = "hogar")
ephh<- ephh %>% select(microdata)
ephh<- unnest(ephh, cols = "microdata")
eph2017_2019<-left_join(ephi,ephh)
ephi<- get_microdata(year=2020, trimester = 1:2, type = "individual")
ephi<- ephi %>% select(microdata)
ephi<- unnest(ephi,cols = "microdata")
ephh <- get_microdata(year=2020, trimester = 1:2, type = "hogar")
ephh<- ephh %>% select("microdata")
ephh<- unnest(ephh,cols = "microdata")
eph2020<- left_join(ephi,ephh)
ephtotal<- bind_rows(eph2017_2019,eph2020)
ephtotal<- left_join(ephtotal,aglomerados)
ephtotal<- left_join(ephtotal,eph::adulto_equivalente)
ephtotal<- left_join(ephtotal,canastas)
ephtotal<- ephtotal %>% group_by(ANO4, TRIMESTRE, CODUSU,NRO_HOGAR) %>% mutate(EAF=sum(adequi)) %>% ungroup()
ephtotal<- ephtotal %>% mutate(CBAEQ=CBA*EAF,
CBTEQ=CBT*EAF)
ephtotal<- ephtotal %>% mutate(condicion=case_when(ITF<CBAEQ ~ "Indigente",
ITF>=CBAEQ & ITF<CBTEQ ~ "Pobre",
ITF>=CBTEQ ~ "No Pobre"))
ephtotal <- ephtotal %>% mutate(SEMESTRE=case_when(TRIMESTRE %in% c(1,2)~1,
TRIMESTRE %in% c(3,4)~2))
ephtotal  %>% group_by(ANO4,SEMESTRE) %>%   summarise("Personas Pobres"=sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T]),"Personas Indigentes"=sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T]) ,"Personas totales"=sum(PONDIH, na.rm = T)/sum(PONDIH[na.rm=T]) )
ephtotal  %>% group_by(reg,ANO4,SEMESTRE) %>%   summarise("Personas Pobres"=sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T]),"Personas Indigentes"=sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T]) ,"Personas totales"=sum(PONDIH, na.rm = T)/sum(PONDIH[na.rm=T]) )
ephtotal %>% filter(ANO4==2017 & SEMESTRE==1 & reg=="CUYO") %>% summarise(sum(PONDIH[condicion %in% ("Indigente","Pobre")],sum(PONDIH),na.rm=T))
ephtotal %>% filter(ANO4==2017 & SEMESTRE==1 & reg=="CUYO") %>% summarise(sum(PONDIH[condicion %in% c("Indigente","Pobre")],sum(PONDIH),na.rm=T))
ephtotal %>% filter(ANO4==2017 & SEMESTRE==1 & reg=="CUYO") %>% summarise(sum(PONDIH[condicion %in% c("Indigente","Pobre")],na.rm = T),sum(PONDIH,na.rm = T))
ephtotal %>% filter(ANO4==2017 & SEMESTRE==1 & reg=="Cuyo") %>% summarise(sum(PONDIH[condicion %in% c("Indigente","Pobre")],na.rm = T),sum(PONDIH,na.rm = T))
969703/3327023
ephtotal  %>% group_by(reg,ANO4,SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Personas Indigentes"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2) ,"Personas totales"=formattable::percent((sum(PONDIH, na.rm = T)/sum(PONDIH[na.rm=T])),2) )
ephtotal  %>% group_by(reg,ANO4,SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2) ,"Personas totales"=formattable::percent((sum(PONDIH, na.rm = T)/sum(PONDIH[na.rm=T])),2) )
ephtotal  %>% group_by(reg,ANO4,SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal  %>% group_by("Región="reg,"Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal  %>% group_by("Región="reg,"Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal  %>% group_by("Región"=reg,"Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal  %>% group_by("Provincia"=aglo,"Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal <- ephtotal %>% filter(ESTADO!=0)  %>%  mutate(Sexo=as.character(CH04),
Sexo=case_when(Sexo=="1" ~ "Hombres",
Sexo=="2" ~ "Mujeres"),
Vacaciones = case_when(PP07G1 == 1 ~ "Sí",
PP07G1 == 2 ~ "No"),
Aguinaldo = case_when(PP07G2 == 1 ~ "Sí",
PP07G2 == 2 ~ "No"),
Diasporenfermedad = case_when(PP07G3 == 1 ~ "Sí",
PP07G3 == 2 ~ "No"),
Obrasocial = case_when(PP07G4 == 1 ~ "Sí",
PP07G4 == 2 ~ "No"),
Descuentojubilatorio = case_when(PP07H == 1 ~ "Sí",
PP07H == 2 ~ "No"),
CH14=as.numeric(CH14),
añoalc=case_when(CH14 %in% c(98,99)~ NaN ,
TRUE ~ CH14),
aeduc=case_when(CH12==1 ~ 0,
CH12==2 & CH13==2~añoalc,
CH12==2 & CH13==1 ~ 6,
CH12==3 & CH13==2 ~ añoalc,
CH12==3 & CH13==1 ~ 9,
CH12==4 & CH13==2 ~ 6+añoalc,
CH12==4 & CH13==1 ~ 12,
CH12==5 & CH13==2 ~ 9+añoalc,
CH12==5 & CH13==1 ~ 12,
CH12 %in% c(6,7) & CH13==2 ~ 12+añoalc,
CH12==6 & CH13==1 ~ 16,
CH12==7 & CH13==1 ~ 17,
CH12==8 & CH13==2 ~ 17+añoalc,
CH12==8 & CH13==1 ~ 21),
edad=case_when(CH06>=18 & CH06<29 ~ "18 a 28",
CH06>=29 & CH06<40 ~ "29 a 39",
CH06>=40 & CH06<51 ~ "40 a 50",
CH06>=51 & CH06<62 ~ "51 a 61",
CH06>=61 ~ "61+"),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
PONDERA= PONDERA/2,
P21= P21 - PP08J1,
JERARQUIA = substr(PP04D_COD, 3, 3),
JERARQUIA = case_when(JERARQUIA=="0" ~ "Dirección",
JERARQUIA=="2" ~ "Jefes",
JERARQUIA=="1" ~ "Cuentapropia",
JERARQUIA=="3" ~ "Trabajadores\nAsalariados"),
JERARQUIA = factor(JERARQUIA, c("Dirección", "Jefes", "Trabajadores\nAsalariados", "Cuentapropia")),
PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
PP04D_COD = as.character(PP04D_COD),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
HORASSEM=PP3E_TOT+PP3F_TOT,
niveled=case_when(NIVEL_ED==1 | NIVEL_ED==7 ~ "Sin\ninstrucción",
NIVEL_ED %in% c(2,3) ~ "Primario\nCompleto",
NIVEL_ED %in% c(4,5)~ "Secundario\nCompleto",
NIVEL_ED == 6 ~ "Superior/Universitario\ncompleto"),
niveled=factor(niveled, levels = c("Sin\ninstrucción","Primario\nCompleto","Secundario\nCompleto","Superior/Universitario\ncompleto")),
JEFE = case_when(CH03==1 ~ 1,
CH03 %in% c(2,3,4,5,6,7,8,9,10) ~ 0),
HIJO = case_when(CH03==3 ~ 1,
CH03 %in% c(1,2,4,5,6,7,8,9,10) ~ 0))
ephtotal$Sexo
ephtotal %>% filter(AGLOMERADO==12) %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza Hombres"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente") & Sexo=="Hombres" ],na.rm = T)/sum(PONDIH[Sexo=="Hombres"],na.rm = T)),2),"Porcentaje de indigencia Hombres"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente") & Sexo=="Hombres"], na.rm = T)/sum(PONDIH[ Sexo=="Hombres"],na.rm = T)),2),"Porcentaje Pobreza Mujeres"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente") & Sexo=="Mujeres" ],na.rm = T)/sum(PONDIH[Sexo=="Mujeres"],na.rm = T)),2),"Porcentaje de indigencia Mujeres"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente") & Sexo=="Mujeres"], na.rm = T)/sum(PONDIH[ Sexo=="Mujeres"],na.rm = T)),2))
ephtotal %>% filter(AGLOMERADO==12) %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza Hombres"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente") & Sexo=="Hombres" ],na.rm = T)/sum(PONDIH[Sexo=="Hombres"],na.rm = T)),2),"Porcentaje Pobreza Mujeres"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente") & Sexo=="Mujeres" ],na.rm = T)/sum(PONDIH[Sexo=="Mujeres"],na.rm = T)),2) ,"Porcentaje de indigencia Hombres"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente") & Sexo=="Hombres"], na.rm = T)/sum(PONDIH[ Sexo=="Hombres"],na.rm = T)),2),"Porcentaje de indigencia Mujeres"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente") & Sexo=="Mujeres"], na.rm = T)/sum(PONDIH[ Sexo=="Mujeres"],na.rm = T)),2))
ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza Hombres"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente") & Sexo=="Hombres" ],na.rm = T)/sum(PONDIH[Sexo=="Hombres"],na.rm = T)),2),"Porcentaje Pobreza Mujeres"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente") & Sexo=="Mujeres" ],na.rm = T)/sum(PONDIH[Sexo=="Mujeres"],na.rm = T)),2) ,"Porcentaje de indigencia Hombres"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente") & Sexo=="Hombres"], na.rm = T)/sum(PONDIH[ Sexo=="Hombres"],na.rm = T)),2),"Porcentaje de indigencia Mujeres"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente") & Sexo=="Mujeres"], na.rm = T)/sum(PONDIH[ Sexo=="Mujeres"],na.rm = T)),2))
ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE, "Sexo"=Sexo) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE, "Rango etario"=edad) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal$edad
ephtotal %>% filter(is.na(edad))
ephtotal<- bind_rows(eph2017_2019,eph2020)
ephtotal <- ephtotal %>% filter(ESTADO!=0)  %>%  mutate(Sexo=as.character(CH04),
Sexo=case_when(Sexo=="1" ~ "Hombres",
Sexo=="2" ~ "Mujeres"),
Vacaciones = case_when(PP07G1 == 1 ~ "Sí",
PP07G1 == 2 ~ "No"),
Aguinaldo = case_when(PP07G2 == 1 ~ "Sí",
PP07G2 == 2 ~ "No"),
Diasporenfermedad = case_when(PP07G3 == 1 ~ "Sí",
PP07G3 == 2 ~ "No"),
Obrasocial = case_when(PP07G4 == 1 ~ "Sí",
PP07G4 == 2 ~ "No"),
Descuentojubilatorio = case_when(PP07H == 1 ~ "Sí",
PP07H == 2 ~ "No"),
CH14=as.numeric(CH14),
añoalc=case_when(CH14 %in% c(98,99)~ NaN ,
TRUE ~ CH14),
aeduc=case_when(CH12==1 ~ 0,
CH12==2 & CH13==2~añoalc,
CH12==2 & CH13==1 ~ 6,
CH12==3 & CH13==2 ~ añoalc,
CH12==3 & CH13==1 ~ 9,
CH12==4 & CH13==2 ~ 6+añoalc,
CH12==4 & CH13==1 ~ 12,
CH12==5 & CH13==2 ~ 9+añoalc,
CH12==5 & CH13==1 ~ 12,
CH12 %in% c(6,7) & CH13==2 ~ 12+añoalc,
CH12==6 & CH13==1 ~ 16,
CH12==7 & CH13==1 ~ 17,
CH12==8 & CH13==2 ~ 17+añoalc,
CH12==8 & CH13==1 ~ 21),
CH06=as.numeric(CH06),
edad=case_when( CH06<18 ~ "Menores a 18",
CH06>=18 & CH06<29 ~ "18 a 28",
CH06>=29 & CH06<40 ~ "29 a 39",
CH06>=40 & CH06<51 ~ "40 a 50",
CH06>=51 & CH06<62 ~ "51 a 61",
CH06>=61 ~ "61+"),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
PONDERA= PONDERA/2,
P21= P21 - PP08J1,
JERARQUIA = substr(PP04D_COD, 3, 3),
JERARQUIA = case_when(JERARQUIA=="0" ~ "Dirección",
JERARQUIA=="2" ~ "Jefes",
JERARQUIA=="1" ~ "Cuentapropia",
JERARQUIA=="3" ~ "Trabajadores\nAsalariados"),
JERARQUIA = factor(JERARQUIA, c("Dirección", "Jefes", "Trabajadores\nAsalariados", "Cuentapropia")),
PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
PP04D_COD = as.character(PP04D_COD),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
HORASSEM=PP3E_TOT+PP3F_TOT,
niveled=case_when(NIVEL_ED==1 | NIVEL_ED==7 ~ "Sin\ninstrucción",
NIVEL_ED %in% c(2,3) ~ "Primario\nCompleto",
NIVEL_ED %in% c(4,5)~ "Secundario\nCompleto",
NIVEL_ED == 6 ~ "Superior/Universitario\ncompleto"),
niveled=factor(niveled, levels = c("Sin\ninstrucción","Primario\nCompleto","Secundario\nCompleto","Superior/Universitario\ncompleto")),
JEFE = case_when(CH03==1 ~ 1,
CH03 %in% c(2,3,4,5,6,7,8,9,10) ~ 0),
HIJO = case_when(CH03==3 ~ 1,
CH03 %in% c(1,2,4,5,6,7,8,9,10) ~ 0))
ephtotal<- left_join(ephtotal,aglomerados)
ephtotal<- left_join(ephtotal,eph::adulto_equivalente)
ephtotal<- left_join(ephtotal,canastas)
ephtotal<- ephtotal %>% group_by(ANO4, TRIMESTRE, CODUSU,NRO_HOGAR) %>% mutate(EAF=sum(adequi)) %>% ungroup()
ephtotal<- ephtotal %>% mutate(CBAEQ=CBA*EAF,
CBTEQ=CBT*EAF)
ephtotal<- ephtotal %>% mutate(condicion=case_when(ITF<CBAEQ ~ "Indigente",
ITF>=CBAEQ & ITF<CBTEQ ~ "Pobre",
ITF>=CBTEQ ~ "No Pobre"))
ephtotal <- ephtotal %>% mutate(SEMESTRE=case_when(TRIMESTRE %in% c(1,2)~1,
TRIMESTRE %in% c(3,4)~2))
ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE, "Rango etario"=edad) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal <- ephtotal %>% filter(ESTADO!=0)  %>%  mutate(Sexo=as.character(CH04),
Sexo=case_when(Sexo=="1" ~ "Hombres",
Sexo=="2" ~ "Mujeres"),
Vacaciones = case_when(PP07G1 == 1 ~ "Sí",
PP07G1 == 2 ~ "No"),
Aguinaldo = case_when(PP07G2 == 1 ~ "Sí",
PP07G2 == 2 ~ "No"),
Diasporenfermedad = case_when(PP07G3 == 1 ~ "Sí",
PP07G3 == 2 ~ "No"),
Obrasocial = case_when(PP07G4 == 1 ~ "Sí",
PP07G4 == 2 ~ "No"),
Descuentojubilatorio = case_when(PP07H == 1 ~ "Sí",
PP07H == 2 ~ "No"),
CH14=as.numeric(CH14),
añoalc=case_when(CH14 %in% c(98,99)~ NaN ,
TRUE ~ CH14),
aeduc=case_when(CH12==1 ~ 0,
CH12==2 & CH13==2~añoalc,
CH12==2 & CH13==1 ~ 6,
CH12==3 & CH13==2 ~ añoalc,
CH12==3 & CH13==1 ~ 9,
CH12==4 & CH13==2 ~ 6+añoalc,
CH12==4 & CH13==1 ~ 12,
CH12==5 & CH13==2 ~ 9+añoalc,
CH12==5 & CH13==1 ~ 12,
CH12 %in% c(6,7) & CH13==2 ~ 12+añoalc,
CH12==6 & CH13==1 ~ 16,
CH12==7 & CH13==1 ~ 17,
CH12==8 & CH13==2 ~ 17+añoalc,
CH12==8 & CH13==1 ~ 21),
CH06=as.numeric(CH06),
edad=case_when( CH06<18 ~ "Menores a 18",
CH06>=18 & CH06<29 ~ "18 a 28",
CH06>=29 & CH06<40 ~ "29 a 39",
CH06>=40 & CH06<51 ~ "40 a 50",
CH06>=51 & CH06<62 ~ "51 a 61",
CH06>=61 ~ "61+"),
edad=factor(edad,levels = c("Menores a 18", "18 a 28", "29 a 39", "40 a 50", "51 a 61", "61+")),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
PONDERA= PONDERA/2,
P21= P21 - PP08J1,
JERARQUIA = substr(PP04D_COD, 3, 3),
JERARQUIA = case_when(JERARQUIA=="0" ~ "Dirección",
JERARQUIA=="2" ~ "Jefes",
JERARQUIA=="1" ~ "Cuentapropia",
JERARQUIA=="3" ~ "Trabajadores\nAsalariados"),
JERARQUIA = factor(JERARQUIA, c("Dirección", "Jefes", "Trabajadores\nAsalariados", "Cuentapropia")),
PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
PP04D_COD = as.character(PP04D_COD),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
HORASSEM=PP3E_TOT+PP3F_TOT,
niveled=case_when(NIVEL_ED==1 | NIVEL_ED==7 ~ "Sin\ninstrucción",
NIVEL_ED %in% c(2,3) ~ "Primario\nCompleto",
NIVEL_ED %in% c(4,5)~ "Secundario\nCompleto",
NIVEL_ED == 6 ~ "Superior/Universitario\ncompleto"),
niveled=factor(niveled, levels = c("Sin\ninstrucción","Primario\nCompleto","Secundario\nCompleto","Superior/Universitario\ncompleto")),
JEFE = case_when(CH03==1 ~ 1,
CH03 %in% c(2,3,4,5,6,7,8,9,10) ~ 0),
HIJO = case_when(CH03==3 ~ 1,
CH03 %in% c(1,2,4,5,6,7,8,9,10) ~ 0))
ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE, "Rango etario"=edad) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
poredad_nacional<-ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE, "Rango etario"=edad) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal <- ephtotal %>% mutate(SEMESTRE=case_when(TRIMESTRE %in% c(1,2)~"S1",
TRIMESTRE %in% c(3,4)~"S2"))
poredad_nacional<-ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE, "Rango etario"=edad) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
View(poredad_nacional)
poredad_nacional<- poredad_nacional %>% mutate(str_c("Año","Semestre"), sep=" ")
poredad_nacional<- poredad_nacional %>% mutate(str_c("Año","Semestre"), sep="/")
poredad_nacional<- poredad_nacional %>% mutate(str_c("Año","Semestre"), sep="  ")
poredad_nacional<- poredad_nacional %>% mutate(str_c("Año","Semestre"), sep="//")
poredad_nacional<- poredad_nacional %>% mutate(str_c("Año","Semestre"), sep="[]")
poredad_nacional<- poredad_nacional %>% mutate(str_c("Año","Semestre"), sep=":")
poredad_nacional<- poredad_nacional %>% mutate(str_c("Año","Semestre"), sep=": ")
poredad_nacional<- poredad_nacional %>% mutate(str_c("Año","Semestre"), sep=": ")
poredad_nacional<- poredad_nacional %>% mutate(str_c("Año","Semestre", sep=" "))
poredad_nacional<- poredad_nacional %>% mutate(str_c(Año,Semestre, sep=" "))
poredad_nacional<-ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE, "Rango etario"=edad) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
poredad_nacional<- poredad_nacional %>% mutate(str_c(Año,Semestre, sep=" "))
poredad_nacional<- poredad_nacional %>% mutate(Semestre=str_c(Año,Semestre, sep=" "))
poredad_nacional$Semestre<- lubridate::as_date(poredad_nacional$Semestre)
ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal  %>% group_by("Región"=reg,"Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
ephtotal  %>% group_by("Provincia"=aglo,"Año"=ANO4,"Semestre"=SEMESTRE) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
poredad_nacional$Semestre
poredad_nacional<-ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE, "Rango etario"=edad) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
poredad_nacional<- poredad_nacional %>% mutate(Semestre=str_c(Año,Semestre, sep=" "))
poredad_nacional$Semestre
unique(poredad_nacional$Semestre)
poredad_nacional$Semestre<- factor(poredad_nacional$Semestre,levels =unique(poredad_nacional$Semestre) )
poredad_nacional<- pivot_longer(-c("Año","Semestre","Rango estario"))
poredad_nacional<- pivot_longer(poredad_nacional,-c("Año","Semestre","Rango estario"))
poredad_nacional<- pivot_longer(poredad_nacional,-c("Año","Semestre","Rango etario"))
poredad_nacional %>% ggplot(mapping = aes(x=Semestre,y =value, color=name)) %>% geom_line()
poredad_nacional %>% ggplot(mapping = aes(x=Semestre,y =value, color=name)) + geom_line()
poredad_nacional %>% ggplot(mapping = aes(x=Semestre,y =value, color=name)) + geom_point()
poredad_nacional %>% ggplot(mapping = aes(x=Semestre,y =value, color=name)) + geom_col()
poredad_nacional %>% filter(name="Porcentaje Pobreza") ggplot(mapping = aes(x=Semestre,y =value, fill=`Rango etario`)) + geom_col()
poredad_nacional %>% filter(name="Porcentaje Pobreza") %>%  ggplot(mapping = aes(x=Semestre,y =value, fill=`Rango etario`)) + geom_col()
poredad_nacional %>% filter(name=="Porcentaje Pobreza") %>%  ggplot(mapping = aes(x=Semestre,y =value, fill=`Rango etario`)) + geom_col()
poredad_nacional %>% filter(name=="Porcentaje Pobreza") %>%  ggplot(mapping = aes(x=Semestre,y =value, fill=`Rango etario`)) + geom_line()
poredad_nacional %>% filter(name=="Porcentaje Pobreza") %>%  ggplot(mapping = aes(x=Semestre,y =value, color=`Rango etario`)) + geom_line()
poredad_nacional %>% filter(name=="Porcentaje Pobreza") %>%  ggplot(mapping = aes(x=Semestre,y =value, color=`Rango etario`)) + geom_point()
poredad_nacional %>% filter(name=="Porcentaje Pobreza") %>%  ggplot(mapping = aes(x=Semestre,y =value, color=`Rango etario`)) + geom_point() + geom_line()
poredad_nacional %>%  ggplot(mapping = aes(x=Semestre,y =value)) + geom_line()
poredad_nacional %>%  ggplot(mapping = aes(x=Semestre,y =value)) + geom_line(aes(color=name))
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value)) + geom_line(aes(color="Rango etario"))
poredad_nacional_pobreza<- poredad_nacional %>% filter(name=="Porcentaje Pobreza")
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value)) + geom_line(aes(color="Rango etario"))
poredad_nacional_pobreza<- poredad_nacional %>% filter(name=="Porcentaje Pobreza",`Rango etario`="Menores a 18")
poredad_nacional_pobreza<- poredad_nacional %>% filter(name=="Porcentaje Pobreza",`Rango etario`=="Menores a 18")
View(poredad_nacional_pobreza)
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value))
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value)) + geom_col()
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value)) + geom_point()
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value)) + geom_line()
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value, group="Rango etario")) + geom_line()
poredad_nacional_pobreza<- poredad_nacional %>% filter(name=="Porcentaje Pobreza")
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value, group="Rango etario", color="Rango etario")) + geom_line()
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value, group="Rango etario")) + geom_line()
poredad_nacional_pobreza<- poredad_nacional %>% filter(name=="Porcentaje Pobreza")
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value, group="Rango etario")) + geom_line()
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value, group="Rango etario")) + geom_point()
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value, group=4)) + geom_point()
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value, group=6)) + geom_line()
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value, group=1)) + geom_line()
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value, group=1)) + geom_line(color="Rango etario")
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value, group="Rango etario")) + geom_line()
poredad_nacional_pobreza %>%  ggplot(mapping = aes(x=Semestre,y =value, group="Rango etario")) + geom_line()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group="Rango etario", color="Rango etario")) + geom_line()
names(poredad_nacional_pobreza)
c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2097-06-01","2097-12-01","2019-06-01","2019-12-01","2020-06-01")
poredad_nacional$Semestre<- c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2097-06-01","2097-12-01","2019-06-01","2019-12-01","2020-06-01")
tibble(unique(poredad_nacional$Semestre),c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2097-06-01","2097-12-01","2019-06-01","2019-12-01","2020-06-01")
hola<-tibble(unique(poredad_nacional$Semestre),c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2097-06-01","2097-12-01","2019-06-01","2019-12-01","2020-06-01")
hola<-tibble(s=unique(poredad_nacional$Semestre),g=c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2097-06-01","2097-12-01","2019-06-01","2019-12-01","2020-06-01")
hola<-tibble(s=unique(poredad_nacional$Semestre),g=c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2097-06-01","2097-12-01","2019-06-01","2019-12-01","2020-06-01"))
hola<-tibble(s=unique(poredad_nacional$Semestre),g=c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2097-06-01","2097-12-01","2019-06-01","2019-12-01","2020-06-01"))
unique(poredad_nacional$Semestre)
hola<-tibble(s=unique(poredad_nacional$Semestre)))
hola<-tibble(s=unique(poredad_nacional$Semestre))
View(hola)
c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2019-06-01","2019-12-01","2020-06-01")
hola<-tibble(Semestre=unique(poredad_nacional$Semestre),Semestre2=c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2019-06-01","2019-12-01","2020-06-01"))
poredad_nacional<- left_join(poredad_nacional,semes)
semes<-tibble(Semestre=unique(poredad_nacional$Semestre),Semestre2=c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2019-06-01","2019-12-01","2020-06-01"))
poredad_nacional<- left_join(poredad_nacional,semes)
poredad_nacional$Semestre2<- as.Date(poredad_nacional$Semestre2)
poredad_nacional_pobreza<- poredad_nacional %>% filter(name=="Porcentaje Pobreza")
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group="Rango etario", color="Rango etario")) + geom_line()
poredad_nacional<-ephtotal  %>% group_by("Año"=ANO4,"Semestre"=SEMESTRE, rango_etario=edad) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
poredad_nacional<- poredad_nacional %>% mutate(Semestre=str_c(Año,Semestre, sep=" "))
poredad_nacional$Semestre<- factor(poredad_nacional$Semestre,levels =unique(poredad_nacional$Semestre) )
poredad_nacional<- pivot_longer(poredad_nacional,-c("Año","Semestre",rango_etario))
semes<-tibble(Semestre=unique(poredad_nacional$Semestre),Semestre2=c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2019-06-01","2019-12-01","2020-06-01"))
poredad_nacional<- left_join(poredad_nacional,semes)
poredad_nacional$Semestre2<- as.Date(poredad_nacional$Semestre2)
poredad_nacional$Semestre2<- as.Date(poredad_nacional$Semestre2)
class(poredad_nacional$Semestre2)
poredad_nacional_pobreza<- poredad_nacional %>% filter(name=="Porcentaje Pobreza")
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario)) + geom_line()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario)) + geom_line() + geom_point()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + geom_text()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + geom_text(position = position_nudge(y=0.1))
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + geom_text(position = position_nudge(y=0.01))
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + geom_text(position = position_nudge(y=0.02))
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(position = position_nudge(y=0.01))
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + geom_label(label.size = 2)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + geom_label()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + geom_label(size=3)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + geom_label(size=0.5)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + geom_label(size=0.8)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + geom_label(size=1)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + geom_label(size=2)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_label_repel(size=2)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_label_repel(size=2)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre2,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=2)
ggsave("grafo.jpg")
poredad_nacional<-ephtotal  %>% filter(AGLOMERADO==12) %>%  group_by("Año"=ANO4,"Semestre"=SEMESTRE, rango_etario=edad) %>%   summarise("Porcentaje Pobreza"=formattable::percent((sum(PONDIH[condicion%in% c( "Pobre", "Indigente")],na.rm = T)/sum(PONDIH[na.rm=T])),2),"Porcentaje de indigencia"=formattable::percent((sum(PONDIH[condicion%in% c( "Indigente")], na.rm = T)/sum(PONDIH[na.rm=T])),2))
poredad_nacional<- poredad_nacional %>% mutate(Semestre=str_c(Año,Semestre, sep=" "))
poredad_nacional$Semestre<- factor(poredad_nacional$Semestre,levels =unique(poredad_nacional$Semestre) )
poredad_nacional<- pivot_longer(poredad_nacional,-c("Año","Semestre",rango_etario))
semes<-tibble(Semestre=unique(poredad_nacional$Semestre),Semestre2=c("2017-06-01","2017-12-01","2018-06-01","2018-12-01","2019-06-01","2019-12-01","2020-06-01"))
poredad_nacional<- left_join(poredad_nacional,semes)
poredad_nacional$Semestre2<- as.Date(poredad_nacional$Semestre2)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=2)
ggsave("grafo.jpg")
ggsave("grafo.pdf")
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=3)
ggsave("grafo.pdf")
ggsave("grafo.pdf")
library(tidyverse)
library(stringr)
options(timeout = 300)
temp<- tempfile(
library(tidyverse)
library(stringr)
options(timeout = 300)
temp<- tempfile()
temp
download.file("https://sisa.msal.gov.ar/datos/descargas/covid-19/files/datos_nomivac_covid19.zip", temp)
datos_nomivac_covid19<- unzip(temp, files = "datos_nomivac_covid19.csv")
datos_nomivac_covid19<- read.csv(datos_nomivac_covid19, sep=",", encoding = "UTF-8")
View(datos_nomivac_covid19)
datos_nomivac_covid19$fecha_aplicacion<- as.Date(datos_nomivac_covid19$fecha_aplicacion)
View(datos_nomivac_covid19)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=3)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=3) + theme_minimal()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=3) + theme_base()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=3) + theme_minimal()
library(scales)
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=3) + scale_y_continuous(labels = scales::label_percent())+ theme_minimal()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=3) + scale_y_continuous(labels = scales::label_percent(accuracy = 0))+ theme_minimal()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=3) + scale_y_continuous(labels = scales::label_percent(accuracy = 0.1))+ theme_minimal()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=3) + scale_y_continuous(labels = scales::label_percent(accuracy = 1))+ theme_minimal()
poredad_nacional_pobreza %>%  ggplot( aes(x=Semestre,y =value, group=rango_etario, color=rango_etario, label=value)) + geom_line() + geom_point() + ggrepel::geom_text_repel(size=3) + scale_y_continuous(labels = scales::label_percent(accuracy = 1))+ theme(text = element_text(family="Open Sans"))
